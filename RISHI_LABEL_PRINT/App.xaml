<Application x:Class="RISHI_LABEL_PRINT.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RISHI_LABEL_PRINT"
             Startup="StartUP">
    <Application.Resources>
        <Style x:Key="LampadaThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas Margin="0,0,0,0" SnapsToDevicePixels="true">
                            <Border Margin="0,0,0,0" CornerRadius="0,0,200,200" Canvas.Left="0"  Height="40"  Width="20" Background="White" Canvas.Top="-20.768">
                            </Border>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LampadaSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>

                                <Canvas Margin="-1,-6">
                                    <Rectangle x:Name="PART_SelectionRange" 
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" 
                                               StrokeThickness="1.0" 
                                               Visibility="Hidden" 
                                               Width="4.0"/>
                                </Canvas>
                                <Track x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{DynamicResource LampadaThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="TextblockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Times New Roman"></Setter>
            <Setter Property="FontSize" Value="28"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Foreground" Value="Navy"></Setter>
            <Setter Property="Height" Value="auto"></Setter>
            <Setter Property="Width" Value="auto"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>

        </Style>




        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="auto"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border CornerRadius="10" BorderThickness="3" BorderBrush="Gray"  Background="{TemplateBinding Panel.Background}">
                            <ScrollViewer Name="PART_ContentHost" VerticalContentAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="auto"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border CornerRadius="10" BorderThickness="3" BorderBrush="Gray"  Background="{TemplateBinding Panel.Background}">

                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                        </Border>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>-->
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="BorderBrush" Value="Gray"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5,0,0,0"></Setter>
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>

            <Setter Property="Foreground" Value="navy"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="Auto"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Bottom"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        </Style>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>

            <Setter Property="Foreground" Value="navy"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="Auto"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="CornerRadius" Value="20"></Setter>
            <Setter Property="BorderThickness" Value="2" ></Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="Background" Value="DarkBlue"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Width" Value="auto" ></Setter>
            <Setter Property="Height" Value="auto"></Setter>
            <Setter Property="Margin" Value="5,0,0,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="Black" BorderThickness="2"  Background="{TemplateBinding Background}"  CornerRadius="100,50,100,50">

                            <Border BorderBrush="Black" BorderThickness="2" Background="White" CornerRadius="200,200,200,250">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="White"></Setter>
                                <Setter Property="Foreground" Value="DarkBlue"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuButton" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="56"></Setter>
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="BorderBrush" Value="#00000000"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Width" Value="auto" ></Setter>
            <Setter Property="Height" Value="89"></Setter>
            <Setter Property="FontStyle"  Value="Italic"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Button FontSize ="28" Height="89">
                            <Button.Background>
                                <ImageBrush ImageSource="/USL_PC;component/Images/Glass-Panel-PNG-File.png" />
                            </Button.Background>
                            <ContentPresenter   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="White"></Setter>
                                <Setter Property="Foreground" Value="DarkBlue"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>

            </Setter>
        </Style>
        <Style x:Key="SubMenuButton" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="Foreground" Value="Black" ></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontStyle"  Value="Italic"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border VerticalAlignment="Center" HorizontalAlignment="Center" Width="340" Height="130">
                            <Border.Background>
                                <ImageBrush  ImageSource="/RISHI_LABEL_PRINT;component/Images/SubManu.png" />
                            </Border.Background>

                            <TextBlock Text="{TemplateBinding Content}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Width="170" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property = "TextBlock.Foreground" Value = "DarkBlue"/>
                                                <Setter Property = "TextBlock.Cursor" Value = "Hand" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="Lavender" CornerRadius="10, 10, 10, 10" BorderBrush="Red" BorderThickness="6" >
                            <StackPanel IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="0,0,1,1"></Setter>
            <Setter Property="Height" Value="auto"></Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="WrapText">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <Style  TargetType="{x:Type DataGridCell}">
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" ></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter  HorizontalAlignment="Center" >
                            </ContentPresenter>
                            <!--<TextBlock  TextWrapping="Wrap" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text}"></TextBlock>-->

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF5B5BBA" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="IsEditing" Value="True" />
                </Trigger>-->
            </Style.Triggers>

        </Style>


        <!--<Style TargetType="DataGridRow">
            <Setter Property="ElementStyle">
                <Setter.Value>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>-->


        <Style  TargetType="{x:Type DataGrid}">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="Background" Value="white"></Setter>
            <Setter Property="Foreground" Value="Navy"></Setter>
            <Setter Property="FontWeight" Value="ExtraBold"></Setter>
            <Setter Property="Width" Value="auto" ></Setter>
            <Setter Property="Height" Value="auto"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="AutoGenerateColumns" Value="false"></Setter>
            <Setter Property="RowHeaderWidth" Value="0"></Setter>
            <Setter Property="IsReadOnly" Value="True"></Setter>
        </Style>

        <Style x:Key="ComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border CornerRadius="10"
                            BorderThickness="2"
                            Background="{TemplateBinding Background}"
                                BorderBrush="Black">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxStyleforBlack" TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="IsEditable" Value="True"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Margin" Value="2,0,0,0"></Setter>
            <!--<Setter Property="VerticalContentAlignment" Value="Center"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="18"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Foreground="White" FontSize="25" BorderBrush="White" Background="Transparent" Name="PART_EditableTextBox"
                                 
                                 Padding="5,0,0,0"
                                     VerticalContentAlignment="Center"
                                 Height="{TemplateBinding Height}"/>
                            <ToggleButton Grid.Column="1" Margin="0"
                                     Height="{TemplateBinding Height}"
                                     Background="Red"
                                     Focusable="False"
                                     IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                                <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                            
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="Black" />
                            </ToggleButton>
                            <ContentPresenter  Name="ContentSite"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="5,0,0,0"/>
                            <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide" >
                                <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                    x:Name="DropDownBorder"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Background="Black"
                                    BorderBrush="White"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="IsEditable" Value="True"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Margin" Value="2,0,0,0"></Setter>
            <!--<Setter Property="VerticalContentAlignment" Value="Center"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="18"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_EditableTextBox"
                                 
                                 Padding="5,0,0,0"
                                     VerticalContentAlignment="Center"
                                 Height="{TemplateBinding Height}"/>
                            <ToggleButton Grid.Column="1" Margin="0"
                                     Height="{TemplateBinding Height}"
                                     Background="Red"
                                     Focusable="False"
                                     IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                                <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                            
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="Black" />
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="5,0,0,0"/>
                            <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                    x:Name="DropDownBorder"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Background="White"
                                    BorderBrush="Black"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PageStyle" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Width" Value="{Binding}"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border  Width="auto" Height="auto" CornerRadius="90,90,80,80" Background="DarkBlue" BorderBrush="Black" BorderThickness="4" >
                            <Grid>
                                <Grid ToolTip="Log Out"  MouseLeftButtonUp="Grid_MouseLeftButtonUp_1" VerticalAlignment="Top" HorizontalAlignment="Right" Height="35" Width="35" Margin="15,0,57,0"  >
                                    <Grid.Background>
                                        <ImageBrush  ImageSource="/RISHI_LABEL_PRINT;component/Images/LogOut.png" >
                                        </ImageBrush>
                                    </Grid.Background>
                                </Grid>
                                <TextBlock Text="LABEL PRINTING SYSTEM" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="25" FontFamily="Calibri" FontWeight="ExtraBold"></TextBlock>
                                <Border  Background="White" Width="auto" Height="auto"  Margin="5,30,5,5" CornerRadius="0,0,0,0"   BorderThickness="4" >
                                    <!--<Border.Background>
                                        <ImageBrush  ImageSource="/RISHI_WIP;component/Images/Background.jpg" >
                                        </ImageBrush>
                                    </Border.Background>-->
                                    <Grid>
                                        <ContentPresenter  Width="{Binding}" Height="{Binding}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        </ContentPresenter>

                                    </Grid>

                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox Margin="0,0,0,0" x:Name="PART_TextBox" Width="{Binding}" Text="{Binding Path=Text, StringFormat='dd MMM yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                        <Viewbox Height="400"
                         Width="400">
                            <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>